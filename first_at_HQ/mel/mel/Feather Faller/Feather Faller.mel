/* This file downloaded from Highend3d.com
''  
''  Highend3d.com File Information:
''  
''    Script Name: Feather Faller
''    Author:  
''    Last Updated: Apr 06, 2009
''    Update/Change this file at:
''    http://Highend3d.com/maya/downloads/mel_scripts/utility_external/misc/5694.html
''  
''  Please do not alter any information above this line
''  it is generated dynamically by Highend3d.com and will
''  be changed automatically on any updates.
*/
/////////////////////////////////////////////////////////////////////////////////////? 2008 Max Boughen//Feather Faller V1.0///////////////////////////////////////////////////////////////////////////////////window -t "Feather Light Faller";	frameLayout -lv false;		columnLayout;				frameLayout -l "Leaf Fall Properties" -cll true -w 350;						rowColumnLayout -nc 2 -cw 1 100 -cw 2 250;						text -label "Frequency:" -align "left";						floatSliderGrp -min 0.01 -max 5 -v 0.75 -field 1 frequency;						text -label "Amplitude:" -align "left";						floatSliderGrp -min 0.1 -max 20 -v 4 -field 1 amplitude;						text -label "Bank:" -align "left";						floatSliderGrp -min 0.1 -max 5 -v 1.25 -field 1 bankAmp;						text -label "Spin:" -align "left";						floatSliderGrp -min 0.1 -max 50 -v 20 -field 1 spinSpeed;						text -label "Rotation Offset:" -align "left";						floatSliderGrp -min 0.1 -max 10 -v 5 -field 1 rotationOff;						text -label "Rotation Speed:" -align "left";						floatSliderGrp -min 0.1 -max 10 -v 5 -field 1 rotationSpeed;						setParent..;				setParent..;				frameLayout -l "Leaf Fall Randomisation" -cll true -w 350;						rowColumnLayout -nc 2 -cw 1 100 -cw 2 250;						text -label "Frequency:" -align "left";						floatSliderGrp -min 0 -max 5 -v 0 -field 1 frequencyR;						text -label "Amplitude:" -align "left";						floatSliderGrp -min 0 -max 20 -v 0 -field 1 amplitudeR;						text -label "Bank:" -align "left";						floatSliderGrp -min 0 -max 5 -v 0 -field 1 bankAmpR;						text -label "Spin:" -align "left";						floatSliderGrp -min 0 -max 50 -v 0 -field 1 spinSpeedR;						text -label "Rotation Offset:" -align "left";						floatSliderGrp -min 0 -max 100 -v 10 -field 1 rotationOffR;						text -label "Rotation Speed:" -align "left";						floatSliderGrp -min 0 -max 100 -v 10 -field 1 rotationSpeedR;						setParent..;				setParent..;				frameLayout -l "Frames, Duration and Origin"  -cll true -w 350;						rowColumnLayout -nc 4 -cw 1 100 -cw 2 80 -cw 3 90 -cw 4 80;						text -label "Origin Height:" -align "left";						floatField -min 1 -v 50 originHeight;						text -label "Start Frame:" -align "left";						intField -min 0 -v 0 -ec gui1 startFrame;						text -label "Fall Duration:" -align "left";						intField -min 1 -v 400 -ec gui2 fallDuration;						text -label "End Frame:" -align "left";						intField -min 1 -v 400 -ec gui1 endFrame;						setParent..;				setParent..;				frameLayout -l "Frames, Duration and Origin Randomisation"  -cll true -w 350;						rowColumnLayout -nc 4 -cw 1 100 -cw 2 80 -cw 3 90 -cw 4 80;						text -label "Height Variation:" -align "left";						floatField -min 1 -v 10 originHeightR;						text -label "Start Frame Variation:" -align "left";						intField -min 0 -v 200 -ec gui1 startFrameR;						text -label "End Frame Variation:" -align "left";						intField -min 1 -v 100 -ec gui2 endFrameR;						setParent..;				setParent..;			button -l "Add Falling Leaf Effect" -c add -w 350;			button -l "Update Values" -c update -w 350;		setParent..;	setParent..;showWindow;proc gui1 () {	int $startTime = `intField -q -v startFrame`;	int $endFramer = `intField -q -v endFrame`;	int $range = $endFramer - $startTime;	intField -e -v $range fallDuration;}proc gui2 () {	int $startTime = `intField -q -v startFrame`;	int $endFramer = `intField -q -v endFrame`;	int $duration = `intField -q -v fallDuration`;	int $endFrame = $startTime + $duration;	intField -e -v $endFrame endFrame;}proc add () {	float $frequency = `floatSliderGrp -q -v frequency`;	float $amplitude = `floatSliderGrp -q -v amplitude`;	float $bank = `floatSliderGrp -q -v bankAmp`;	float $spin = `floatSliderGrp -q -v spinSpeed`;	float $rotationOffset = `floatSliderGrp -q -v rotationOff`;	float $rotationSpeed =`floatSliderGrp -q -v rotationSpeed`;	float $startTime = `intField -q -v startFrame`;	float $endFrame = `intField -q -v endFrame`;	float $originHeight = `floatField -q -v originHeight`;	float $frequencyR = `floatSliderGrp -q -v frequencyR`;	float $amplitudeR = `floatSliderGrp -q -v amplitudeR`;	float $bankR = `floatSliderGrp -q -v bankAmpR`;	float $spinR = `floatSliderGrp -q -v spinSpeedR`;	float $rotationOffsetR = `floatSliderGrp -q -v rotationOffR`;	float $rotationSpeedR =`floatSliderGrp -q -v rotationSpeedR`;	float $startTimeR = `intField -q -v startFrameR`;	float $endFrameR = `intField -q -v endFrameR`;	float $originHeightR = `floatField -q -v originHeightR`;	string $selectionList[] = `ls - sl`;	int $leafAmount = (size($selectionList));	print ("You have selected "+$leafAmount+" leaves");		int $t=$leafAmount-1;	for($t==$leafAmount;$t>=0;$t--){		string $obj = $selectionList[$t];		print $obj;		if ((`attributeExists "frequency" $obj`)&&(`attributeExists "amplitude" $obj`)&&(`attributeExists "startFrame" $obj`)){			print (""+$obj+" Already has a falling leaf motion attatched");		} else {			float $frequency2=$frequency+(rand((-$frequencyR/2),($frequencyR/2)));			float $amplitude2=$amplitude+(rand((-$amplitudeR/2),($amplitudeR/2)));			float $bank2=$bank+(rand((-$bankR/2),($bankR/2)));			float $spin2=$spin+(rand((-$spinR/2),($spinR/2)));						select $obj;			DeleteHistory;			FreezeTransformations;			CenterPivot;			addAttr -longName frequency -keyable true -defaultValue $frequency2;			addAttr -longName amplitude -keyable true -defaultValue $amplitude2;			addAttr -longName bankAmplitude -keyable true -defaultValue $bank2;			addAttr -longName spinSpeed -keyable true -defaultValue $spin2;			addAttr -longName secondSpinSpeed -keyable true -defaultValue $rotationSpeed;			eval("expression -s \""+$obj+".translateX="+$obj+".amplitude*sin("+$obj+".frequency*"+$obj+".translateY); "+			""+$obj+".rotateZ=("+$obj+".amplitude*sin("+$obj+".frequency*"+$obj+".translateY))*"+$obj+".bankAmplitude; "+			""+$obj+".rotateY="+$obj+".translateY*"+$obj+".spinSpeed;\"  -o "+$obj+" -ae 1 -uc all;");						eval ("group -n fall"+$obj+";");			DeleteHistory;			CenterPivot;			string $selectionListG[] = `ls - sl`;			string $gobj = $selectionListG[0];			eval ("move -r "+$rotationOffset+" 0 0 "+$gobj+".scalePivot "+$gobj+".rotatePivot;"); 			eval ("expression -s \""+$gobj+".rotateY="+$obj+".secondSpinSpeed*"+$obj+".translateY;\" -o "+$gobj+" -ae 1 -uc all;");					}				float $startTime2=$startTime+(rand((-$startTimeR/2),($startTimeR/2)));		float $originHeight2=$originHeight+(rand((-$originHeightR/2),($originHeightR/2)));		float $endFrame2=$endFrame+(rand((-$endFrameR/2),($endFrameR/2)));				currentTime $endFrame2;		eval("setKeyframe "+$obj+".ty;");		currentTime $startTime2;		move -r 0 $originHeight2 0 $obj;		eval("setKeyframe "+$obj+".ty;");	}}