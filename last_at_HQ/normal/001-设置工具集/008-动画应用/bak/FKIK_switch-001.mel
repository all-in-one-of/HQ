global proc IKFKswitch()
{
 if (`window -q -exists IKFKswitchWindow`) deleteUI IKFKswitchWindow;
 window
        -title "IKFK逐帧转换" -wh 200 100
              IKFKswitchWindow;

    columnLayout -adj 1; 
       
    rowColumnLayout -nc 2 -cw 1 50 -cw 2 250;
     text -l "设定:";  
     radioButtonGrp -numberOfRadioButtons 2
                   -cw 1 60 -cw 2 50 -cl2 left left
                   -labelArray2 "FK" "IK"
                   GetFKIKRBG;                
     setParent ..;            
     separator -height 10 -style "in";      
      rowColumnLayout -nc 5 -cw 1 50 -cw 2 60 -cw 3 50 -cw 4 60 -cw 5 80;
           text -l "起始帧：";   
           textField -ed 1 -tx "" StartFrame;
           text -l "终止帧：";
           textField -ed 1 -tx "" EndFrame;                            
           button -l "K帧" -c IKFKConvert;
        setParent ..;
     separator -height 10 -style "in";        
  showWindow   IKFKswitchWindow;     
     
} 

global proc IKFKConvert()
{   
 string $selCtrl[] = `ls -sl`; 
 int $s;
 int $i;
 int $f;
 float $GetFKIK = `radioButtonGrp -q -select GetFKIKRBG`;
 float $GetFKIK = $GetFKIK - 1;
 int $getStartFrame = `textField -q -tx StartFrame`;
 int $getEndFrame = `textField -q -tx EndFrame`;
 int $FrameRange = 0;
 $FrameRange = abs($getEndFrame-$getStartFrame+1);
                 
 for($f=0;$f<$FrameRange;$f++)
 {     
   currentTime ($getStartFrame+$f); 
    
   for($s=0;$s<size($selCtrl);$s++)
   {                         
      select -r $selCtrl[$s];
      TSM2_FKIKSwitch();              
                            
   }        
 }
  
  print "转换完成!";
  
} 

global proc TSM2_FKIKSwitch()
{
float $GetFKIK = `radioButtonGrp -q -select GetFKIKRBG`;
float $GetFKIK = $GetFKIK - 1;
int $cycleCheckState;

$cycleCheckState = `cycleCheck -q -e`;
if ($cycleCheckState == 1)
    cycleCheck -e off;

int $i;

string $selNodes[] = `selectedNodes`; 
string $buffer[]; 
int $numTokens = 0;

$numTokens = `tokenize $selNodes[0] "|" $buffer`;
string $theNode = $buffer[$numTokens-1];

string $ns = "";
$numTokens = `tokenize $theNode ":" $buffer`;
$theNode = $buffer[ $numTokens-1 ];

if( $numTokens > 1 )
{
	for( $i = 0; $i < (size($buffer) - 1); $i++ )
	{
		$ns += $buffer[$i];
		$ns += ":";
	}
}

$numTokens = `tokenize $theNode "_" $buffer`;
string $sysPref = $buffer[0];

string $switchAttribute = $sysPref + "_FKIK";
string $upperBody = $ns + "Upper_Body";
string $userswitch = $upperBody + "." + $switchAttribute;

float $currentMode = `getAttr $userswitch`;

if( $currentMode != $GetFKIK)
{
    
string $controlSet;
if( $GetFKIK == 0 )
{
	setAttr $userswitch 1;
	setKeyframe $userswitch;
	$controlSet = $ns + $sysPref + "_FK_Controls";	
}
else
{
	setAttr $userswitch 0;
	setKeyframe $userswitch;
	$controlSet = $ns + $sysPref + "_IK_Controls";
}

select $controlSet;
string $controls[] = `selectedNodes`; 
for( $i = 0; $i < size($controls); $i++ ) 
{
	string $control = $controls[$i];
	$numTokens = `tokenize $control "|" $buffer`;
	$control = $buffer[$numTokens-1];
	
	string $switch = $control + "_SWITCH";
	
	if( `objExists $switch` )
	{
		string $controlAttributes[] = `listAttr -k $control`;
		string $switchAttributes[] = `listAttr -k $switch`;
		
		int $j;
		for( $j = 0; $j < size($controlAttributes); $j++ )
		{
			if( $controlAttributes[$j] == "Reposition" )
			{
				$j++;
			}	
			string $attributeToSet = $control + "." + $controlAttributes[$j];
			int $foundAttribute = 0;
			int $k;
			for( $k = 0; $k < size($switchAttributes); $k++ )
			{
				if( $controlAttributes[$j] == $switchAttributes[$k] )
				{
					$foundAttribute = 1;
					string $attributeToGet = $switch + "." + $switchAttributes[$k];
					float $valueOfAttribute = `getAttr $attributeToGet`;
					setAttr $attributeToSet $valueOfAttribute; 
				}
			}

			if( $foundAttribute == 0 )
			{
				setAttr $attributeToSet 0;
			}

			setKeyframe $attributeToSet;
		}
	}
}

if( $GetFKIK == 0 )
{
	$currentMode = 0;	
}
else
{
	$currentMode = 1;
}
setAttr $userswitch $currentMode;
setKeyframe $userswitch;

$keytime = `findKeyframe -which previous -attribute $switchAttribute -animation objects $upperBody`;
$now = `currentTime -query`;
if( $keytime == $now )
{
	setKeyframe -time 0 $userswitch;
	$keytime = 0;
}
keyTangent -time $keytime -outTangentType step -attribute $switchAttribute -	animation objects $upperBody;

if ($cycleCheckState == 1)
    cycleCheck -e on;

select -clear;
}
}

IKFKswitch();