
global proc CreatejointsOnCurvesTools()
{
    if (`window -q -exists CreatejointsOnCurvesToolsWindow`) deleteUI CreatejointsOnCurvesToolsWindow;
    window
        -title "CreatejointsOnCurves" -wh 330 150
        -maximizeButton 0 -minimizeButton 1
              CreatejointsOnCurvesToolsWindow;

    columnLayout -adjustableColumn 0;
        ///添加新的命名
        frameLayout -label "CreatejointsTool" -borderStyle "etchedIn"
                -collapse 0 -collapsable 1
                -marginWidth 5 -marginHeight 5;

                    rowColumnLayout -numberOfColumns 3
                            -cw 1 80 -cw 2 60 -cw 3 120
                             -cs 1 5 -cs 2 0 -cs 3 8;
                        text -label "Joints.numbers：";
                        intField -minValue 2 -v 10 sl_jointOnCurvesFirst;
                        button -label "Create Joints"  -c "jointsOnCurves_proc(\"jointChain\")";
                        setParent ..;
            setParent..;
        setParent..;
        window -edit -widthHeight 310 110 CreatejointsOnCurvesToolsWindow;
        showWindow  CreatejointsOnCurvesToolsWindow;

}
global proc jointsOnCurves_proc(string $type)
{
	string $curves[] = `ls -sl -long`;
	int $NumberOfCurves = `size($curves)`;
	int $NumberOfJoints;

		$NumberOfJoints = `intField -q -v sl_jointOnCurvesFirst`;
		string $i;
		int $curveCount = 0;
		for ($i in $curves)
		{
				select -r $i;
				string $iShape[] = `pickWalk -d down`;

				if (`objectType -isType "nurbsCurve" $iShape[0]`)
				{
						string $pathNodes[];
						int $numTokens = tokenize($i, "|", $pathNodes);
						string $myObj = $pathNodes[$numTokens - 1];

						// faccio il query del nome originale della curva (per poterlo riutilizzare in seguito)
						string $OriginalCurveName_ = $i;

						// duplico la curva
						select -r $i ;
						string $newCurve_[] = `duplicate -smartTransform`;

						// seleziono la curva duplicata e la freezo
						select $newCurve_[0];
						makeIdentity -apply true -t 1 -r 1 -s 1 -n 0;

							// faccio il rebuild della curva in base al numero di joints che la mia joint Chain deve avere
							//int $numberOfSpans = $NumberOfJoints - 1;
							int $numberOfSpans;
							if ($type == "jointChain")
							{
								$numberOfSpans = $NumberOfJoints;
							}
							else if ($type == "joint")
							{
								$numberOfSpans = $NumberOfJoints - 1;
							}

							rebuildCurve -ch 1 -rpo 1 -rt 0 -end 1 -kr 0 -kcp 0 -kep 1 -kt 0 -s $numberOfSpans -d 3 -tol 0.01 $newCurve_[0];

							// faccio il query delle spans della curva
							float $NumberOfSpans = `getAttr ($newCurve_[0] + ".spans")`;
							// calcolo il numero degli EP della curva
							// EP = Span + 1
							float $NumberOfEP = $NumberOfSpans + 1;

							// faccio il query della posizione del primo EditPoint della curva
							string $ep_0 = $newCurve_[0] + ".ep[0]";
							string $tempCluster[0] = `cluster $ep_0`;
							float $cluster_xyz[] = `xform -q -rp -ws $tempCluster[1]`;

							// creo il primo joint della catena
							select -cl;
							string $RootJoint;

							if ($type == "jointChain")
							{
								$RootJoint = `joint -p $cluster_xyz[0] $cluster_xyz[1] $cluster_xyz[2] `;
							}
							else if ($type == "joint")
							{
								$RootJoint = `joint -p $cluster_xyz[0] $cluster_xyz[1] $cluster_xyz[2]`;
							}


							delete $tempCluster[1];

							// creo la catena di joint
							string $BaseJoint = $RootJoint;
							int $j;
							for ($j = 1; $j < $NumberOfEP; $j++)
							{
									if ($type == "jointChain")
									{
										$ep_0 = $newCurve_[0] + ".ep[" + $j + "]";
										string $tempCluster[0] = `cluster $ep_0`;
										float $cluster_xyz[] = `xform -q -rp -ws $tempCluster[1]`;

										//string $boneName = $myObj + "_joint_" + ($j + 1);
										string $newJoint = `joint -p $cluster_xyz[0] $cluster_xyz[1] $cluster_xyz[2]`;

										parent $newJoint $BaseJoint;
										$BaseJoint = $newJoint;

										delete $tempCluster[1];
									}

									else if ($type == "joint")
									{
										$ep_0 = $newCurve_[0] + ".ep[" + $j + "]";
										string $tempCluster[0] = `cluster $ep_0`;
										float $cluster_xyz[] = `xform -q -rp -ws $tempCluster[1]`;

										//string $boneName = $myObj + "_joint_" + ($j + 1);
										string $newJoint = `joint -p $cluster_xyz[0] $cluster_xyz[1] $cluster_xyz[2]`;

										parent -w $newJoint;
										//$BaseJoint = $newJoint;

										delete $tempCluster[1];
									}

							}

						if ($type == "jointChain")
						{
							// ri-oriento la catena
							select -r $RootJoint;
							joint -e -oj xyz -secondaryAxisOrient yup -ch -zso;
						}

						// elimino la curva duplicata e utilizzata per la costruzione della catena
						delete $newCurve_[0];
						$curveCount++;
				}

		}

			select -r $curves;
			print "**********************************************************************************\n";
			print "**********************************************************************************\n";
			print "Objects processed:\n";
			print $curves;

			if ($type == "jointChain")
			{
				print ("---> " + $curveCount + " joint chains created <---  read the script editor for more info..");
			}
			else if ($type == "joint")
			{
				print ("---> " + $curveCount + " objects processed <---  read the script editor for more info..");
			}


}

CreatejointsOnCurvesTools();