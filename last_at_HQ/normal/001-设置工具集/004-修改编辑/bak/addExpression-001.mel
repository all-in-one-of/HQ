global proc addExpression()
{
  if (`window -ex addExpressionWin `) deleteUI addExpressionWin;
  window
    -wh 300 50
    -title "添加表达式"
    -minimizeButton 0
    -maximizeButton 0
    -rtf true
    -s 1    
  addExpressionWin; 
  
 columnLayout -adj 1;
  scrollLayout scrollLayout;
  scrollLayout scrollLayout; 
  
  
  rowColumnLayout -nc 3 -cw 1 150 -cw 2 190 -cw 3 50;
    textFieldGrp -label "命名:" -text"" -cw 1 32 -cw 2 100 expressionPrefixTFG;
    textFieldGrp -label " 指定控制器：" -text "" -cw 1 80 -cw 2 100 ctrlTFG;
    button -l "<<加载" -c addCtrl;    
   setParent..;
   
  separator -height 10 -style "in"; 

  columnLayout;
    checkBoxGrp
        -numberOfCheckBoxes 3
        -label "  translate:"
        -labelArray3 "x" "y" "z"
        -cw 1 80 -cw 2 60 -cw 3 60 -cw 4 60 -cl4 left left left left
        translateCBG;
    checkBoxGrp
        -numberOfCheckBoxes 3
        -label "  rotate:"
        -labelArray3 "x" "y" "z"
        -cw 1 80 -cw 2 60 -cw 3 60 -cw 4 60 -cl4 left left left left
        rotateCBG;
    checkBoxGrp
        -numberOfCheckBoxes 3
        -label "  scale:"
        -labelArray3 "x" "y" "z"
        -cw 1 80 -cw 2 60 -cw 3 60 -cw 4 60 -cl4 left left left left
        scaleCBG;  
    checkBoxGrp
        -numberOfCheckBoxes 1
        -label "  visibility:"        
        -cw 1 80 -cw 2 60 -cl2 left left
        visbilityCBG;                          
  setParent..;
   
 separator -height 10 -style "in";
 
 rowColumnLayout -nc 1 -cw 1 100; 
 optionMenuGrp -label "运算："  -columnWidth 1 38 mathOMG;
         menuItem -label "sin"; 
         menuItem -label "cos";
                         
 setParent ..;         

 separator -height 10 -style "in" ;
 
 button -l "添加表达式" -c createExpression; 
  
 separator -height 5 -style "in"; 
  
  setParent ..;
 setParent ..;
 showWindow addExpressionWin;  
}


global proc addCtrl()
{
 string $selCtrl[] = `ls -sl`;
 textFieldGrp -e -tx $selCtrl[0] ctrlTFG; 
}
global proc createExpression()
{
 string $attributePrefix = `textFieldGrp -q -tx expressionPrefixTFG`; 
 string $getCtrl = `textFieldGrp -q -tx ctrlTFG`;
 int $translateX = `checkBoxGrp -q -v1 translateCBG`;
 int $translateY = `checkBoxGrp -q -v2 translateCBG`;
 int $translateZ = `checkBoxGrp -q -v3 translateCBG`;  
 int $rotateX = `checkBoxGrp -q -v1 rotateCBG`;
 int $rotateY = `checkBoxGrp -q -v2 rotateCBG`; 
 int $rotateZ = `checkBoxGrp -q -v3 rotateCBG`; 
 int $scaleX = `checkBoxGrp -q -v1 scaleCBG`;
 int $scaleY = `checkBoxGrp -q -v2 scaleCBG`;
 int $scaleZ = `checkBoxGrp -q -v3 scaleCBG`; 
 int $visibility = `checkBoxGrp -q -v1 visbilityCBG`;
 
 int $GetMathOMG;
 string $GetMath;
 $GetMathOMG = `optionMenuGrp -q -sl mathOMG`;
   
 string $swing = $attributePrefix + "_swing";//amplitude
 addAttr -ln $swing  -at double $getCtrl;
 string $ctrl_swing = $getCtrl + "." + $swing;
 setAttr -e-keyable true $ctrl_swing;
 setAttr $ctrl_swing 0.5;
 
 string $fast = $attributePrefix + "_fast";//frequency
 addAttr -ln $fast  -at double $getCtrl; 
 string $ctrl_fast = $getCtrl + "." + $fast;
 setAttr -e-keyable true $ctrl_fast; 
 setAttr $ctrl_fast 1.5;
  
 string $sine = $attributePrefix + "_sine";//offset
 addAttr -ln $sine  -at double $getCtrl;  
 string $ctrl_sine = $getCtrl + "." + $sine;
 setAttr -e-keyable true $ctrl_sine; 
 setAttr $ctrl_sine 0.3;
    
 string $fall = $attributePrefix + "_fall"; //transition 
 addAttr -ln $fall  -at double  -min 1 -dv 1 $getCtrl;
 string $ctrl_fall = $getCtrl + "." + $fall;
 setAttr -e-keyable true $ctrl_fall; 
 setAttr $ctrl_fall 1.05;
  
 string $allOffset = $attributePrefix + "_allOffset"; //整体偏移属性
 addAttr -ln $allOffset  -at double $getCtrl; 
 string $ctrl_allOffset = $getCtrl + "." + $allOffset;
 setAttr -e-keyable true $ctrl_allOffset;  
 
 string $timeSwitch = $attributePrefix + "_time"; //时间开关
 addAttr -ln $timeSwitch  -at bool $getCtrl; 
 string $ctrl_timeSwitch = $getCtrl + "." + $timeSwitch;
 setAttr -e-keyable true $ctrl_timeSwitch;
 
 string $anytime = $attributePrefix + "_anytime"; //自定义开关
 addAttr -ln $anytime  -at double $getCtrl; 
 string $ctrl_anytime = $getCtrl + "." + $anytime;
 setAttr -e-keyable true $ctrl_anytime;
  
 
/////定义time表达式初始值//////////////////// 
 
 string $getTXexpression = "";
 string $getTYexpression = ""; 
 string $getTZexpression = ""; 
 
 string $getRXexpression = "";
 string $getRYexpression = ""; 
 string $getRZexpression = ""; 
 
 string $getSXexpression = "";
 string $getSYexpression = ""; 
 string $getSZexpression = ""; 
 
 string $getVisexpression = "";  
 
 string $wholeExpression = "";
 
 
/////定义自定义时间表达式初始值///////////////

 
 string $getTXexpressionV2 = "";
 string $getTYexpressionV2 = ""; 
 string $getTZexpressionV2 = ""; 
 
 string $getRXexpressionV2 = "";
 string $getRYexpressionV2 = ""; 
 string $getRZexpressionV2 = ""; 
 
 string $getSXexpressionV2 = "";
 string $getSYexpressionV2 = ""; 
 string $getSZexpressionV2 = ""; 
 
 string $getVisexpressionV2 = "";  
 
 string $wholeExpressionV2 = "";
 
 
 string $Expression = "";
 
 
 string $selObj[] = `ls -sl`; 
 
 switch($GetMathOMG)
 {
   case 1:
   $GetMath = "sin";
   break;
   case 2:
   $GetMath = "cos";
   break;  
 }
 


 
  ///translate///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
 if($translateX == 1)
 {
   int $tx=0;
   int $objNum = size($selObj);

   for($tx;$tx<$objNum;$tx++)
   {
     $getTXexpression += $selObj[$tx] + ".translateX = " + $GetMath + "(" + $ctrl_fast + "*time + " + ($objNum-$tx) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($tx+1) + ") + " + $ctrl_allOffset + ";\n";  
     $getTXexpressionV2 += $selObj[$tx] + ".translateX = " + $GetMath + "(" + $ctrl_fast + "*sin(" + $ctrl_anytime + ") + " + ($objNum-$tx) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($tx+1) + ") + " + $ctrl_allOffset + ";\n";  
  
   }
 }
 else{ $getTXexpression = "";}
 
// print $getTXexpression;
 

 if($translateY == 1)
 {
   int $ty=0;
   int $objNum = size($selObj);

   for($ty;$ty<$objNum;$ty++)
   {
     $getTYexpression += $selObj[$ty] + ".translateY = " + $GetMath + "(" + $ctrl_fast + "*time + " + ($objNum-$ty) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($ty+1) + ") + " + $ctrl_allOffset + ";\n";  
     $getTYexpressionV2 += $selObj[$ty] + ".translateY = " + $GetMath + "(" + $ctrl_fast + "*sin(" + $ctrl_anytime + ") + " + ($objNum-$ty) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($ty+1) + ") + " + $ctrl_allOffset + ";\n";  
   
   }
 }
 else{ $getTYexpression = "";}
 
// print $getTYexpression;
 
 

 if($translateZ == 1)
 {
   int $tz=0;
   int $objNum = size($selObj);

   for($tz;$tz<$objNum;$tz++)
   {
     $getTZexpression += $selObj[$tz] + ".translateZ = " + $GetMath + "(" + $ctrl_fast + "*time + " + ($objNum-$tz) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($tz+1) + ") + " + $ctrl_allOffset + ";\n";  
     $getTZexpressionV2 += $selObj[$tz] + ".translateZ = " + $GetMath + "(" + $ctrl_fast + "*sin(" + $ctrl_anytime + ") + " + ($objNum-$tz) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($tz+1) + ") + " + $ctrl_allOffset + ";\n";  
  
   }
 }
 else{ $getTZexpression = "";}

// print $getTZexpression;
 

///rotate/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


  if($rotateX == 1)
 {
   int $rx=0;
   int $objNum = size($selObj);

   for($rx;$rx<$objNum;$rx++)
   {
     $getRXexpression += $selObj[$rx] + ".rotateX = " + $GetMath + "(" + $ctrl_fast + "*time + " + ($objNum-$rx) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($rx+1) + ") + " + $ctrl_allOffset + ";\n";  
     $getRXexpressionV2 += $selObj[$rx] + ".rotateX = " + $GetMath + "(" + $ctrl_fast + "*sin(" + $ctrl_anytime + ") + " + ($objNum-$rx) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($rx+1) + ") + " + $ctrl_allOffset + ";\n";  
  
   }
 }
 else{ $getRXexpression = "";}
 
// print $getRXexpression;
 

 if($rotateY == 1)
 {
   int $ry=0;
   int $objNum = size($selObj);

   for($ry;$ry<$objNum;$ry++)
   {
     $getRYexpression += $selObj[$ry] + ".rotateY = " + $GetMath + "(" + $ctrl_fast + "*time + " + ($objNum-$ry) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($ry+1) + ") + " + $ctrl_allOffset + ";\n";  
     $getRYexpressionV2 += $selObj[$ry] + ".rotateY = " + $GetMath + "(" + $ctrl_fast + "*sin(" + $ctrl_anytime + ") + " + ($objNum-$ry) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($ry+1) + ") + " + $ctrl_allOffset + ";\n";  
  
   }
 }
 else{ $getRYexpression = "";}
 
// print $getRYexpression;
 
 

 if($rotateZ == 1)
 {
   int $rz=0;
   int $objNum = size($selObj);

   for($rz;$rz<$objNum;$rz++)
   {
     $getRZexpression += $selObj[$rz] + ".rotateZ = " + $GetMath + "(" + $ctrl_fast + "*time + " + ($objNum-$rz) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($rz+1) + ") + " + $ctrl_allOffset + ";\n";  
     $getRZexpressionV2 += $selObj[$rz] + ".rotateZ = " + $GetMath + "(" + $ctrl_fast + "*sin(" + $ctrl_anytime + ") + " + ($objNum-$rz) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($rz+1) + ") + " + $ctrl_allOffset + ";\n";  
  
   }
 }
 else{ $getRZexpression = "";}

// print $getRZexpression;


///scale/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



  if($scaleX == 1)
 {
   int $sx=0;
   int $objNum = size($selObj);

   for($sx;$sx<$objNum;$sx++)
   {
     $getSXexpression += $selObj[$sx] + ".scaleX = " + $GetMath + "(" + $ctrl_fast + "*time + " + ($objNum-$sx) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($sx+1) + ") + " + $ctrl_allOffset + ";\n";  
     $getSXexpressionV2 += $selObj[$sx] + ".scaleX = " + $GetMath + "(" + $ctrl_fast + "*sin(" + $ctrl_anytime + ") + " + ($objNum-$sx) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($sx+1) + ") + " + $ctrl_allOffset + ";\n";  

   }
 }
 else{ $getSXexpression = "";}
 
// print $getSXexpression;
 

 if($scaleY == 1)
 {
   int $sy=0;
   int $objNum = size($selObj);

   for($sy;$sy<$objNum;$sy++)
   {
     $getSYexpression += $selObj[$sy] + ".scaleY = " + $GetMath + "(" + $ctrl_fast + "*time + " + ($objNum-$sy) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($sy+1) + ") + " + $ctrl_allOffset + ";\n";  
     $getSYexpressionV2 += $selObj[$sy] + ".scaleY = " + $GetMath + "(" + $ctrl_fast + "*sin(" + $ctrl_anytime + ") + " + ($objNum-$sy) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($sy+1) + ") + " + $ctrl_allOffset + ";\n";  

   }
 }
 else{ $getSYexpression = "";}
 
// print $getSYexpression;
 
 

 if($scaleZ == 1)
 {
   int $sz=0;
   int $objNum = size($selObj);

   for($sz;$sz<$objNum;$sz++)
   {
     $getSZexpression += $selObj[$sz] + ".scaleZ = " + $GetMath + "(" + $ctrl_fast + "*time + " + ($objNum-$sz) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($sz+1) + ") + " + $ctrl_allOffset + ";\n";  
     $getSZexpressionV2 += $selObj[$sz] + ".scaleZ = " + $GetMath + "(" + $ctrl_fast + "*sin(" + $ctrl_anytime + ") + " + ($objNum-$sz) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($sz+1) + ") + " + $ctrl_allOffset + ";\n";  

   }
 }
 else{ $getSZexpression = "";}

// print $getSZexpression;


///visibility////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 if($visibility == 1)
 {
   int $vis=0;
   int $objNum = size($selObj);

   for($vis;$vis<$objNum;$vis++)
   {
     $getVisexpression += $selObj[$vis] + ".visibility = " + $GetMath + "(" + $ctrl_fast + "*time + " + ($objNum-$vis) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($vis+1) + ") + " + $ctrl_allOffset + ";\n";  
     $getVisexpressionV2 += $selObj[$vis] + ".visibility = " + $GetMath + "(" + $ctrl_fast + "*sin(" + $ctrl_anytime + ") + " + ($objNum-$vis) + "*" + $ctrl_sine + ")*" + $ctrl_swing + "*pow(" + $ctrl_fall + "," + ($vis+1) + ") + " + $ctrl_allOffset + ";\n";  

   }
 }
 else{ $getVisexpression = "";}
*/ 
 

  
 $wholeExpression = $getTXexpression + $getTYexpression + $getTZexpression + $getRXexpression + $getRYexpression + $getRZexpression + $getSXexpression + $getSYexpression + $getSZexpression;
 $wholeExpressionV2 = $getTXexpressionV2 + $getTYexpressionV2 + $getTZexpressionV2 + $getRXexpressionV2 + $getRYexpressionV2 + $getRZexpressionV2 + $getSXexpressionV2 + $getSYexpressionV2 + $getSZexpressionV2;
 
 $Expression = "if(" + $ctrl_timeSwitch + " == 0)\n{\n" + $wholeExpressionV2 + "\n}\n\nif(" + $ctrl_timeSwitch + " == 1)\n{\n" + $wholeExpression + "\n}";
 
 expression -s $Expression -n ( $attributePrefix + "_automatic");
 
 
}

addExpression()