global proc string k_cleanUpLightlinker() {

    int $uselessLinkCount;
    int $dlsLinkers, $dosLinkers, $isgLinkers, $ipseLinkers, $drgLinkers, $dhrgLinkers;
    string $ws = `workspace -q -fn`;
    string $fn = `file -sn -q -shn`;
    string $file = $ws + "/linkers_in_" + $fn + ".txt";
    int $fileId;
    $startTime = `timerX`;
    waitCursor -st on;
    string $linkers_dls[] = `listConnections -plugs true -source no defaultLightSet.message`;
    string $linkers_dos[] = `listConnections -plugs true -source no defaultObjectSet.message`;
    string $linkers_isg[] = `listConnections -plugs true -source no initialShadingGroup.message`;
    string $linkers_ipse[] = `listConnections -plugs true -source no initialParticleSE.message`;
    string $linkers_drg[] = `listConnections -plugs true -source no defaultRenderGlobals.message`;
    string $linkers_dhrg[] = `listConnections -plugs true -source no defaultHardwareRenderGlobals.message`;
    int $linkersCount =
        size($linkers_dls) +
        size($linkers_dos) +
        size($linkers_isg) +
        size($linkers_ipse) +
        size($linkers_dhrg) +
        size($linkers_dhrg);

    if (size($linkers_dls) != 0) {
        for ( $linker in $linkers_dls ) {
            string $srcAttr;
            string $tmp[] = stringToStringArray($linker, ".");
            int $len = size($tmp);
            string $linkerNode = $tmp[0]+"."+$tmp[1];
            if ( $tmp[$len-1] == "shadowLight" ) {
                $srcAttr = `connectionInfo -sfd ($linkerNode+".shadowObject")`;
            } else {
                $srcAttr = `connectionInfo -sfd ($linkerNode+".object")`;
            }
            if ( $srcAttr == "" ) {
                continue;
            } else if
                ( $srcAttr == "initialShadingGroup.message" // connections between initialShadingGroup.msg    lightLinker1.lnk[*].olnk
                || $srcAttr == "initialParticleSE.message" // connections between initialParticleSE.msg    lightLinker1.lnk[*].olnk
                || $srcAttr == "defaultObjectSet.message" // connections between defaultObjectSet.msg    lightLinker1.lnk[*].olnk
                || $srcAttr == "defaultLightSet.message" // connections between defaultLightSet.msg    lightLinker1.lnk[*].olnk
                || $srcAttr == "hyperGraphLayout.message" // connections between hyperGraphLayout.msg    lightLinker1.lnk[*].olnk
                || $srcAttr == "defaultRenderGlobals.message" // connections between defaultRenderGlobals.msg    lightLinker1.lnk[*].olnk
                || $srcAttr == "defaultHardwareRenderGlobals.message" // connections between defaultHardwareRenderGlobals.msg    lightLinker1.lnk[*].olnk
                )
            {

                $dlsLinkers++;
            }
        }
    }
    clear $linkers_dls;
    if (size($linkers_dos) != 0) {
        fprint $fileId ("\r\n");
        for ( $linker in $linkers_dos ) {

            $dosLinkers++;
        }
    }
    clear $linkers_dos;
    if (size($linkers_isg) != 0) {
        fprint $fileId ("\r\n");
        for ( $linker in $linkers_isg ) {
            if($linker != "initialMaterialInfo.shadingGroup") {

                $isgLinkers++;
            }
        }
    }
    clear $linkers_isg;
    if (size($linkers_ipse) != 0) {
        fprint $fileId ("\r\n");
        for ( $linker in $linkers_ipse ) {

            $ipseLinkers++;
        }
    }
    clear $linkers_ipse;
    if (size($linkers_drg) != 0) {
        fprint $fileId ("\r\n");
        for ( $linker in $linkers_drg ) {

            $drgLinkers++;
        
        }
    }
    clear $linkers_drg;
    if (size($linkers_dhrg) != 0) {
        fprint $fileId ("\r\n");
        for ( $linker in $linkers_dhrg ) {

            $dhrgLinkers++;
        }
    }
    clear $linkers_dhrg;
    $uselessLinkCount =
        $dlsLinkers + $dosLinkers +
        $isgLinkers + $ipseLinkers +
        $dhrgLinkers + $drgLinkers;

    clear $linkers_dos;
    clear $linkers_dls;
    clear $linkers_isg;
    clear $linkers_ipse;

    waitCursor -st off;
    $elaspedTime = `timerX -startTime $startTime`;

    string $lign[] = `ls "lightLinker1.link[*].lightIgnored"`;
    string $oign[] = `ls "lightLinker1.link[*].objectIgnored"`;
    string $sllk[]= `ls "lightLinker1.slnk[*].shadowLight"`;
    string $solk[]= `ls "lightLinker1.slnk[*].shadowObject"`;
    string $slig[]= `ls "lightLinker1.sign[*].shadowLightIgnored"`;
    string $soig[]= `ls "lightLinker1.sign[*].shadowObjectIgnored"`;
    int $linkersCount = size($lign)+size($oign)+size($sllk)+size($solk)+size($slig)+size($soig);

    if($uselessLinkCount>0 && $linkersCount > 1000){
        return "总共查出 " + $uselessLinkCount + " 个无用灯光链接！ 以及"+$linkersCount + " 个非照明（使某灯光不照明某物体的）灯光链接，这可能导致 maya 变慢";}
    
    else if ($uselessLinkCount>0){

    return "总共查出 " + $uselessLinkCount + " 个无用灯光链接！";}
    
    else{ return "";}
}

k_cleanUpLightlinker()

